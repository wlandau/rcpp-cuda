CUDA_HOME = /usr/local/cuda
CXX = /usr/bin/g++

#########################################

R_INC = $(R_HOME)/include
RCPP_INC = $(R_HOME)/library/Rcpp/include

NVCC = $(CUDA_HOME)/bin/nvcc
CUDA_INC = $(CUDA_HOME)/include 
PKG_LIBS= -L$(CUDA_HOME)/lib64 -Wl,-rpath,$(CUDA_HOME)/lib64 -lcudart -d

NVCC_FLAGS = -x cu -Xcompiler "-fPIC" -gencode arch=compute_20,code=sm_20 -gencode arch=compute_30,code=sm_30 -gencode arch=compute_35,code=sm_35 -I$(R_INC)

### Define objects
cu_sources = someCUDAcode.c
cu_sharedlibs = someCUDAcode.o

cpp_sources = someCPPcode.cpp RcppExports.cpp
cpp_sharedlibs = someCPPcode.o RcppExports.o

OBJECTS = $(cu_sharedlibs) $(cpp_sharedlibs)

all : rcppcuda.so

rcppcuda.so: $(OBJECTS)

%.o: %.cpp $(cpp_sources)
	$(CXX) $< -c -fPIC -I$(R_INC) -I$(RCPP_INC)

%.o: %.c $(cu_sources)
	$(NVCC) $(NVCC_FLAGS) -I$(CUDA_INC) $< -c